--- scripts/generate_env_example.py
+++ scripts/generate_env_example.py
@@ -2,12 +2,15 @@
 """Generate .env.example based on pydantic Settings."""
 
 from ferum_customs.config.settings import Settings
+import os
 
 
 def main() -> None:
-    settings = Settings(telegram_bot_token="")
+    """Main function to generate .env.example file."""
+    settings = Settings(telegram_bot_token=os.getenv("TELEGRAM_BOT_TOKEN", ""))
     fields = settings.model_fields
     lines = ["# Generated .env.example"]
+    
     for name, _ in fields.items():
         key = name.upper()
         default = getattr(settings, name, "")
@@ -15,10 +18,14 @@
         lines.append(f"{key}={value}")
 
     content = "\n".join(lines) + "\n"
-    with open(".env.example", "w", encoding="utf-8") as f:
-        f.write(content)
-    print("✅ .env.example generated.")
+    
+    try:
+        with open(".env.example", "w", encoding="utf-8") as f:
+            f.write(content)
+        print("✅ .env.example generated.")
+    except IOError as e:
+        print(f"❌ Error writing .env.example: {e}")
 
 
 if __name__ == "__main__":
-    main()
+    main()
