version: '3.8'

services:
  db:
    image: postgres:${POSTGRES_TAG:-14}
    dns:
      - 1.1.1.1
      - 9.9.9.9
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-erpnext}
      POSTGRES_USER: ${POSTGRES_USER:-erp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:latest
    dns: 
      - 1.1.1.1
      - 9.9.9.9
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD:?REDIS_PASSWORD not set}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?REDIS_PASSWORD not set}
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20

  frappe:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BENCH_TAG: ${BENCH_TAG:-v5.25.9}
        FRAPPE_BRANCH: ${FRAPPE_BRANCH:-version-15}
        ERPNEXT_BRANCH: ${ERPNEXT_BRANCH:-version-15}
    dns: 
      - 1.1.1.1
      - 9.9.9.9
    environment:
      SITE_NAME: ${SITE_NAME:?SITE_NAME not set}
      DB_TYPE: ${DB_TYPE:-postgres}
      POSTGRES_HOST: db
      DB_HOST: ${DB_HOST:-db}
      POSTGRES_DB: ${POSTGRES_DB:-erpnext}
      POSTGRES_USER: ${POSTGRES_USER:-erp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD not set}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:?ADMIN_PASSWORD not set}
      REDIS_PASSWORD: ${REDIS_PASSWORD:?REDIS_PASSWORD not set}
      REDIS_CACHE: ${REDIS_CACHE:-redis://:${REDIS_PASSWORD}@redis:6379/0}
      REDIS_QUEUE: ${REDIS_QUEUE:-redis://:${REDIS_PASSWORD}@redis:6379/1}
      REDIS_SOCKETIO: redis://:${REDIS_PASSWORD}@redis:6379/2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - ./ferum_customs:/home/frappe/frappe-bench/apps/ferum_customs
      - ./docker/entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
    command: ["/usr/local/bin/docker-entrypoint.sh"]

  fastapi:
    build:
      context: .
      dockerfile: docker/Dockerfile.fastapi
    depends_on:
      frappe:
        condition: service_started
    ports:
      - "8100:8000"
    env_file:
      - .env

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    depends_on:
      fastapi:
        condition: service_started
    ports:
      - "3000:3000"

  nginx:
    image: nginx:alpine
    depends_on:
      frappe:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/certs:/etc/nginx/certs:ro

  prometheus:
    image: prom/prometheus:v2.37.0
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:8.5.2
    ports:
      - "3001:3000"

volumes:
  sites:
  db-data:
  redis-data: