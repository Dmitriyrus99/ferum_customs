--- a/ferum_customs/ferum_customs/doctype/service_object/service_object.py
+++ b/ferum_customs/ferum_customs/doctype/service_object/service_object.py
@@ -4,17 +4,12 @@
 """
 
 from __future__ import annotations
-
-# from typing import TYPE_CHECKING
-# from frappe import _ # Если будут пользовательские сообщения
-# if TYPE_CHECKING:
-# from ..service_project.service_project import ServiceProject # Пример
-# from .assigned_engineer_item import AssignedEngineerItem # Для дочерней таблицы
-# pass
+import frappe
+from frappe import _  # Для пользовательских сообщений
 from frappe.model.document import Document
 
 
-class ServiceObject(Document):  # type: ignore[misc]
+class ServiceObject(Document):
     """
     Класс документа ServiceObject.
     """
@@ -31,30 +26,20 @@
         self._clean_fields()
 
         # Пример дополнительной валидации:
-        # if self.get("warranty_expiry_date") and self.get("purchase_date"):
-        #     if self.warranty_expiry_date < self.purchase_date:
-        #         frappe.throw(_("Дата окончания гарантии не может быть раньше даты покупки."))
-
-        # Логика из оригинального файла (service_object.py):
-        # if self.linked_service_project:
-        #     self.linked_service_project = self.linked_service_project.strip()
-        # Эта логика теперь в _clean_fields()
+        if self.get("warranty_expiry_date") and self.get("purchase_date"):
+            if self.warranty_expiry_date < self.purchase_date:
+                frappe.throw(_("Дата окончания гарантии не может быть раньше даты покупки."))
 
     def _clean_fields(self) -> None:
         """
         Очистка строковых полей.
         """
-        # Поля типа Link обычно не требуют strip(), так как хранят ID.
-        # Если 'linked_service_project' - это Data поле, то strip() имеет смысл.
-        # Предположим, что это Link, поэтому strip() здесь может быть излишним,
-        # но оставлен для соответствия оригинальному коду, если там была причина.
         if self.get("linked_service_project") and isinstance(
             self.linked_service_project, str
         ):
             self.linked_service_project = self.linked_service_project.strip()
 
-        # if self.get("object_name"):
-        #     self.object_name = self.object_name.strip()
-        pass
+        if self.get("object_name") and isinstance(self.object_name, str):
+            self.object_name = self.object_name.strip()
 
-    # Другие методы жизненного цикла (before_save, on_submit, etc.) могут быть добавлены по необходимости.
+    # Другие методы жизненного цикла (before_save, on_submit, etc.) могут быть добавлены по необходимости.