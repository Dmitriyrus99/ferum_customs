--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/packaging/_musllinux.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/packaging/_musllinux.py
@@ -52,7 +52,7 @@
         _, e_phoff, _, _, _, e_phentsize, e_phnum = _read_unpacked(f, e_fmt)
     except struct.error:
         return None
-    for i in range(e_phnum + 1):
+    for i in range(e_phnum):
         f.seek(e_phoff + e_phentsize * i)
         try:
             p_type, p_offset, p_filesz = p_get(_read_unpacked(f, p_fmt))
@@ -75,7 +75,7 @@
 
 def _parse_musl_version(output: str) -> Optional[_MuslVersion]:
     lines = [n for n in (n.strip() for n in output.splitlines()) if n]
-    if len(lines) < 2 or lines[0][:4] != "musl":
+    if len(lines) < 2 or not lines[0].startswith("musl"):
         return None
     m = re.match(r"Version (\d+)\.(\d+)", lines[1])
     if not m:
@@ -103,7 +103,7 @@
         ld = _parse_ld_musl_from_elf(f)
     if not ld:
         return None
-    proc = subprocess.run([ld], stderr=subprocess.PIPE, universal_newlines=True)
+    proc = subprocess.run([ld], stderr=subprocess.PIPE, text=True)
     return _parse_musl_version(proc.stderr)
 
 
@@ -133,4 +133,4 @@
     print("musl:", _get_musl_version(sys.executable))
     print("tags:", end=" ")
     for t in platform_tags(re.sub(r"[.-]", "_", plat.split("-", 1)[-1])):
-        print(t, end="\n      ")
+        print(t, end="\n      ")
