--- a/scripts/setup_environment.sh
+++ b/scripts/setup_environment.sh
@@ -10,6 +10,7 @@
 
 # Shell settings
 set -eo pipefail
+
 # Check for Docker systemd proxy settings
 if [ -d "/etc/systemd/system/docker.service.d" ] && ls /etc/systemd/system/docker.service.d/*proxy*.conf &>/dev/null; then
     echo "Ошибка: в настройках Docker systemd обнаружен прокси (http-proxy.conf)."
@@ -17,11 +18,12 @@
          "sudo systemctl daemon-reload && sudo systemctl restart docker"
     exit 1
 fi
+
 # --- Переменные конфигурации ---
 GIT_REPO="https://github.com/frappe/frappe_docker.git"
 PROJECT_DIR="frappe_docker"
-SITE_NAME=${SITE_NAME:-"dev.localhost"}
-ADMIN_PASSWORD=${ADMIN_PASSWORD:-"admin"}
+SITE_NAME="${SITE_NAME:-dev.localhost}"
+ADMIN_PASSWORD="${ADMIN_PASSWORD:-admin}"
 FRAPPE_VERSION="v15"
 ERPNext_VERSION="v15"
 SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
@@ -29,10 +31,10 @@
 FERUM_CUSTOMS_PATH="${FERUM_CUSTOMS_PATH:-$APP_ROOT}"
 
 # --- Функция для определения команды docker compose ---
-if docker compose version &> /dev/null; then
+if command -v docker-compose &> /dev/null; then
+  DC_COMMAND="docker-compose"
+else
   DC_COMMAND="docker compose"
-else
-  DC_COMMAND="docker-compose"
 fi
 
 # --- Проверка и загрузка .env файла ---
@@ -56,7 +58,7 @@
 
 echo "Начало установки ERPNext (Frappe/ERPNext ${FRAPPE_VERSION}) с использованием Docker..."
 echo "Будет создан сайт: ${SITE_NAME}"
-echo "Пароль администратора: ${ADMIN_PASSWORD}"
+echo "Пароль администратора: [скрыто]"
 echo "---"
 
 # --- Этап 1: Подготовка окружения ---
@@ -66,11 +68,7 @@
   echo "Директория '$PROJECT_DIR' уже существует. Пропускаем клонирование."
 else
   echo "Клонирование репозитория из '$GIT_REPO'..."
-  git clone "$GIT_REPO" "$PROJECT_DIR"
-  if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось клонировать репозиторий. Убедитесь, что Git установлен."
-    exit 1
-  fi
+  git clone "$GIT_REPO" "$PROJECT_DIR" || { echo "Ошибка: Не удалось клонировать репозиторий. Убедитесь, что Git установлен."; exit 1; }
 fi
 
 cd "$PROJECT_DIR" || { echo "Ошибка: Не удалось перейти в директорию '$PROJECT_DIR'."; exit 1; }
@@ -81,11 +79,7 @@
 # --- Этап 2: Запуск контейнеров ---
 echo "--> Этап 2: Запуск Docker-контейнеров для разработки..."
 echo "⚠️ Убедитесь, что в настройках Docker Desktop или файле systemd для демона Docker не указан прокси (например localhost:1080), иначе будет ошибка при загрузке образов."
-$DC_COMMAND -f pwd.yml up -d
-if [ $? -ne 0 ]; then
-  echo "Ошибка: Не удалось запустить Docker-контейнеры. Проверьте установку Docker."
-  exit 1
-fi
+$DC_COMMAND -f pwd.yml up -d || { echo "Ошибка: Не удалось запустить Docker-контейнеры. Проверьте установку Docker."; exit 1; }
 
 echo "Контейнеры успешно запущены в фоновом режиме."
 echo "---"
@@ -95,45 +89,21 @@
 echo "Это может занять значительное время..."
 
 echo "Создание сайта ${SITE_NAME}..."
-$DC_COMMAND -f pwd.yml exec backend bench new-site "${SITE_NAME}" --no-mariadb-socket --mariadb-root-password "${DB_ROOT_PASSWORD}" --admin-password "${ADMIN_PASSWORD}"
-if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось создать новый сайт."
-    exit 1
-fi
+$DC_COMMAND -f pwd.yml exec backend bench new-site "${SITE_NAME}" --no-mariadb-socket --mariadb-root-password "${DB_ROOT_PASSWORD}" --admin-password "${ADMIN_PASSWORD}" || { echo "Ошибка: Не удалось создать новый сайт."; exit 1; }
 
 echo "Установка Frappe версии ${FRAPPE_VERSION}..."
-$DC_COMMAND -f pwd.yml exec backend bench get-app --branch "${FRAPPE_VERSION}" frappe
-if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось загрузить Frappe."
-    exit 1
-fi
+$DC_COMMAND -f pwd.yml exec backend bench get-app --branch "${FRAPPE_VERSION}" frappe || { echo "Ошибка: Не удалось загрузить Frappe."; exit 1; }
 
 echo "Установка ERPNext версии ${ERPNext_VERSION}..."
-$DC_COMMAND -f pwd.yml exec backend bench get-app --branch "${ERPNext_VERSION}" erpnext
-if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось загрузить ERPNext."
-    exit 1
-fi
+$DC_COMMAND -f pwd.yml exec backend bench get-app --branch "${ERPNext_VERSION}" erpnext || { echo "Ошибка: Не удалось загрузить ERPNext."; exit 1; }
 
 echo "Установка приложения ERPNext на сайт ${SITE_NAME}..."
-$DC_COMMAND -f pwd.yml exec backend bench --site "${SITE_NAME}" install-app erpnext
-if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось установить приложение ERPNext на сайт."
-    exit 1
-fi
+$DC_COMMAND -f pwd.yml exec backend bench --site "${SITE_NAME}" install-app erpnext || { echo "Ошибка: Не удалось установить приложение ERPNext на сайт."; exit 1; }
 
 echo "Добавление и установка приложения ferum_customs..."
-$DC_COMMAND -f pwd.yml exec backend bench get-app "$FERUM_CUSTOMS_PATH"
-if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось добавить приложение ferum_customs."
-    exit 1
-fi
+$DC_COMMAND -f pwd.yml exec backend bench get-app "$FERUM_CUSTOMS_PATH" || { echo "Ошибка: Не удалось добавить приложение ferum_customs."; exit 1; }
 
-$DC_COMMAND -f pwd.yml exec backend bench --site "${SITE_NAME}" install-app ferum_customs
-if [ $? -ne 0 ]; then
-    echo "Ошибка: Не удалось установить приложение ferum_customs."
-    exit 1
-fi
+$DC_COMMAND -f pwd.yml exec backend bench --site "${SITE_NAME}" install-app ferum_customs || { echo "Ошибка: Не удалось установить приложение ferum_customs."; exit 1; }
 
 echo "Сайт и приложения успешно установлены."
 echo "---"
@@ -148,6 +118,6 @@
 echo
 echo "Данные для входа:"
 echo "  Пользователь: Administrator"
-echo "  Пароль:       ${ADMIN_PASSWORD}"
+echo "  Пароль:       [скрыто]"
 echo
-echo "Для просмотра логов используйте: $DC_COMMAND -f pwd.yml logs -f"
+echo "Для просмотра логов используйте: $DC_COMMAND -f pwd.yml logs -f"
