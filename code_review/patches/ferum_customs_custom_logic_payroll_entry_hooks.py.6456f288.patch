--- a/ferum_customs/custom_logic/payroll_entry_hooks.py
+++ b/ferum_customs/custom_logic/payroll_entry_hooks.py
@@ -13,9 +13,6 @@
     from ferum_customs.ferum_customs.doctype.payroll_entry_custom.payroll_entry_custom import (
         PayrollEntryCustom,
     )
-
-# from ..doctype.service_report.service_report import ServiceReport # Если используется в расчетах
-
 
 def validate(doc: PayrollEntryCustom, method: str | None = None) -> None:
     """
@@ -38,11 +35,6 @@
                     frappe.utils.formatdate(doc.start_date),
                 )
             )
-
-    # Сюда можно добавить другие проверки для PayrollEntryCustom.
-    # if not doc.get("employee"):
-    #     frappe.throw(_("Не выбран сотрудник для расчета зарплаты."))
-
 
 def before_save(doc: PayrollEntryCustom, method: str | None = None) -> None:
     """Calculate ``total_payable`` before saving."""
@@ -79,8 +71,8 @@
 
     doc.total_payable = base_salary + additional_pay + total_bonus - total_deduction
 
-    if doc.get("total_payable") is None:
+    if doc.total_payable is None:
         doc.total_payable = 0.0
 
-    if isinstance(doc.get("total_payable"), float | int):
-        doc.total_payable = round(doc.total_payable, 2)
+    if isinstance(doc.total_payable, (float, int)):
+        doc.total_payable = round(doc.total_payable, 2)
