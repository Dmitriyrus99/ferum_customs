--- a/tests/unit/test_bot_service.py
+++ b/tests/unit/test_bot_service.py
@@ -2,6 +2,7 @@
 from datetime import datetime, timezone
 from types import SimpleNamespace
 from typing import TYPE_CHECKING, cast
+import os
 
 import pytest
 from aiogram import Bot
@@ -20,8 +21,8 @@
 
 @pytest.mark.asyncio
 async def test_start_handler_sets_incident_state():
-    """Проверяем, что start_handler переводит FSM в нужное состояние."""
-    bot = Bot(token="test-token", parse_mode=None)  # Ensure parse_mode is explicitly set
+    """Test that start_handler sets the FSM to the correct state."""
+    bot = Bot(token=os.getenv("BOT_TOKEN"), parse_mode="HTML")  # Use environment variable for token
     storage = MemoryStorage()
     key = StorageKey(bot_id=bot.id or 0, chat_id=123, user_id=123)
     state = FSMContext(storage=storage, key=key)
@@ -40,9 +41,9 @@
 
 
 def test_get_dispatcher_custom_bot_and_storage():
-    """Проверяем, что get_dispatcher возвращает переданные объекты bot и storage."""
-    bot = Bot(token="test-token", parse_mode=None)  # Ensure parse_mode is explicitly set
+    """Test that get_dispatcher returns the provided bot and storage objects."""
+    bot = Bot(token=os.getenv("BOT_TOKEN"), parse_mode="HTML")  # Use environment variable for token
     storage = MemoryStorage()
     dp = get_dispatcher(bot=bot, storage=storage)
     assert dp.bot is bot
-    assert dp.storage is storage
+    assert dp.storage is storage
