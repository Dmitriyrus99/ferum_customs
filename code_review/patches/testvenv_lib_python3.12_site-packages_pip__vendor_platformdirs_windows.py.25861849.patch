--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/windows.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/windows.py
@@ -49,7 +49,7 @@
                 params.append(opinion_value)
             if self.version:
                 params.append(self.version)
-        path = os.path.join(path, *params)  # noqa: PTH118
+        path = os.path.join(path, *params)
         self._optionally_create_directory(path)
         return path
 
@@ -94,7 +94,7 @@
         """:return: log directory tied to the user, same as `user_data_dir` if not opinionated else ``Logs`` in it"""
         path = self.user_data_dir
         if self.opinion:
-            path = os.path.join(path, "Logs")  # noqa: PTH118
+            path = os.path.join(path, "Logs")
             self._optionally_create_directory(path)
         return path
 
@@ -131,7 +131,7 @@
         """
         path = os.path.normpath(
             os.path.join(get_win_folder("CSIDL_LOCAL_APPDATA"), "Temp")
-        )  # noqa: PTH118
+        )
         return self._append_parts(path)
 
 
@@ -161,27 +161,27 @@
     if csidl_name == "CSIDL_PERSONAL":
         return os.path.join(
             os.path.normpath(os.environ["USERPROFILE"]), "Documents"
-        )  # noqa: PTH118
+        )
 
     if csidl_name == "CSIDL_DOWNLOADS":
         return os.path.join(
             os.path.normpath(os.environ["USERPROFILE"]), "Downloads"
-        )  # noqa: PTH118
+        )
 
     if csidl_name == "CSIDL_MYPICTURES":
         return os.path.join(
             os.path.normpath(os.environ["USERPROFILE"]), "Pictures"
-        )  # noqa: PTH118
+        )
 
     if csidl_name == "CSIDL_MYVIDEO":
         return os.path.join(
             os.path.normpath(os.environ["USERPROFILE"]), "Videos"
-        )  # noqa: PTH118
+        )
 
     if csidl_name == "CSIDL_MYMUSIC":
         return os.path.join(
             os.path.normpath(os.environ["USERPROFILE"]), "Music"
-        )  # noqa: PTH118
+        )
     return None
 
 
@@ -205,9 +205,7 @@
     if shell_folder_name is None:
         msg = f"Unknown CSIDL name: {csidl_name}"
         raise ValueError(msg)
-    if (
-        sys.platform != "win32"
-    ):  # only needed for mypy type checker to know that this code runs only on Windows
+    if sys.platform != "win32":
         raise NotImplementedError
     import winreg
 
@@ -221,10 +219,6 @@
 
 def get_win_folder_via_ctypes(csidl_name: str) -> str:
     """Get folder with ctypes."""
-    # There is no 'CSIDL_DOWNLOADS'.
-    # Use 'CSIDL_PROFILE' (40) and append the default folder 'Downloads' instead.
-    # https://learn.microsoft.com/en-us/windows/win32/shell/knownfolderid
-
     csidl_const = {
         "CSIDL_APPDATA": 26,
         "CSIDL_COMMON_APPDATA": 35,
@@ -240,19 +234,16 @@
         raise ValueError(msg)
 
     buf = ctypes.create_unicode_buffer(1024)
-    windll = getattr(
-        ctypes, "windll"
-    )  # noqa: B009 # using getattr to avoid false positive with mypy type checker
+    windll = getattr(ctypes, "windll")
     windll.shell32.SHGetFolderPathW(None, csidl_const, None, 0, buf)
 
-    # Downgrade to short path name if it has highbit chars.
-    if any(ord(c) > 255 for c in buf):  # noqa: PLR2004
+    if any(ord(c) > 255 for c in buf):
         buf2 = ctypes.create_unicode_buffer(1024)
         if windll.kernel32.GetShortPathNameW(buf.value, buf2, 1024):
             buf = buf2
 
     if csidl_name == "CSIDL_DOWNLOADS":
-        return os.path.join(buf.value, "Downloads")  # noqa: PTH118
+        return os.path.join(buf.value, "Downloads")
 
     return buf.value
 
@@ -261,7 +252,7 @@
     if hasattr(ctypes, "windll"):
         return get_win_folder_via_ctypes
     try:
-        import winreg  # noqa: F401
+        import winreg
     except ImportError:
         return get_win_folder_from_env_vars
     else:
@@ -272,4 +263,4 @@
 
 __all__ = [
     "Windows",
-]
+]
