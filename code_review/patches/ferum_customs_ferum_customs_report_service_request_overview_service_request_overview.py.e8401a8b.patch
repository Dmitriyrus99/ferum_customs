--- a/ferum_customs/ferum_customs/report/service_request_overview/service_request_overview.py
+++ b/ferum_customs/ferum_customs/report/service_request_overview/service_request_overview.py
@@ -13,11 +13,11 @@
 ) -> tuple[list[dict[str, Any]], list[dict[str, Any]]]:
     open_count = frappe.db.count(
         "service_request",
-        {"status": ["not in", (STATUS_ZAKRYTA, STATUS_OTMENENA)]},
+        filters={"status": ["not in", (STATUS_ZAKRYTA, STATUS_OTMENENA)]},
     )
     overdue_count = frappe.db.count(
         "service_request",
-        {
+        filters={
             "status": ["not in", (STATUS_ZAKRYTA, STATUS_OTMENENA)],
             "planned_end_datetime": ("<", frappe.utils.now_datetime()),
         },
@@ -26,9 +26,9 @@
     avg_seconds = (
         frappe.db.sql(
             """
-        select avg(timestampdiff(second, actual_start_datetime, actual_end_datetime))
-        from `tabservice_request`
-        where actual_end_datetime is not null
+        SELECT AVG(TIMESTAMPDIFF(SECOND, actual_start_datetime, actual_end_datetime))
+        FROM `tabservice_request`
+        WHERE actual_end_datetime IS NOT NULL
         """,
             as_dict=False,
         )[0][0]
@@ -52,4 +52,4 @@
         {"metric": _("Avg Resolution (h)"), "value": avg_hours},
     ]
 
-    return columns, data
+    return columns, data
