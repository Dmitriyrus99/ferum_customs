--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/urllib3/contrib/socks.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/urllib3/contrib/socks.py
@@ -78,7 +78,7 @@
     """
 
     def __init__(self, *args, **kwargs):
-        self._socks_options = kwargs.pop("_socks_options")
+        self._socks_options = kwargs.pop("_socks_options", {})
         super(SOCKSConnection, self).__init__(*args, **kwargs)
 
     def _new_conn(self):
@@ -95,12 +95,12 @@
         try:
             conn = socks.create_connection(
                 (self.host, self.port),
-                proxy_type=self._socks_options["socks_version"],
-                proxy_addr=self._socks_options["proxy_host"],
-                proxy_port=self._socks_options["proxy_port"],
-                proxy_username=self._socks_options["username"],
-                proxy_password=self._socks_options["password"],
-                proxy_rdns=self._socks_options["rdns"],
+                proxy_type=self._socks_options.get("socks_version"),
+                proxy_addr=self._socks_options.get("proxy_host"),
+                proxy_port=self._socks_options.get("proxy_port"),
+                proxy_username=self._socks_options.get("username"),
+                proxy_password=self._socks_options.get("password"),
+                proxy_rdns=self._socks_options.get("rdns"),
                 timeout=self.timeout,
                 **extra_kw,
             )
@@ -113,8 +113,6 @@
             )
 
         except socks.ProxyError as e:
-            # This is fragile as hell, but it seems to be the only way to raise
-            # useful errors here.
             if e.socket_err:
                 error = e.socket_err
                 if isinstance(error, SocketTimeout):
@@ -132,7 +130,7 @@
                     self, "Failed to establish a new connection: %s" % e
                 )
 
-        except SocketError as e:  # Defensive: PySocks should catch all these.
+        except SocketError as e:
             raise NewConnectionError(
                 self, "Failed to establish a new connection: %s" % e
             )
@@ -140,10 +138,6 @@
         return conn
 
 
-# We don't need to duplicate the Verified/Unverified distinction from
-# urllib3/connection.py here because the HTTPSConnection will already have been
-# correctly set to either the Verified or Unverified form by that module. This
-# means the SOCKSHTTPSConnection will automatically be the correct type.
 class SOCKSHTTPSConnection(SOCKSConnection, HTTPSConnection):
     pass
 
@@ -213,4 +207,4 @@
             num_pools, headers, **connection_pool_kw
         )
 
-        self.pool_classes_by_scheme = SOCKSProxyManager.pool_classes_by_scheme
+        self.pool_classes_by_scheme = SOCKSProxyManager.pool_classes_by_scheme
