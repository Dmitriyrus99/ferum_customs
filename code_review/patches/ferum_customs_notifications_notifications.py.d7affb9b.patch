--- a/ferum_customs/notifications/notifications.py
+++ b/ferum_customs/notifications/notifications.py
@@ -8,7 +8,7 @@
 Возвращает словарь, описывающий условия для отправки стандартных уведомлений Frappe.
 """
 
-from typing import Any
+from typing import Any, Dict
 
 from frappe import _  # Для перевода возможных строк в будущем
 
@@ -16,7 +16,7 @@
 from ferum_customs.constants import ROLE_PROEKTNYJ_MENEDZHER
 
 
-def get_notification_config() -> dict[str, Any]:
+def get_notification_config() -> Dict[str, Any]:
     """
     Возвращает конфигурацию для стандартных уведомлений Frappe.
     """
@@ -27,7 +27,7 @@
                 "doc.get_doc_before_save() and doc.status != doc.get_doc_before_save().status"
             ),
             # Получатели уведомлений
-            "send_to_roles": [ROLE_PROEKTNYJ_MENEDZHER],
+            "send_to_roles": [ROLE_PROEKTNYJ_MENЕДZHER],
             # Темы и сообщения можно шаблонизировать через Jinja
             "subject": _("Статус заявки {{ doc.name }} изменён на {{ doc.status }}"),
             "message": _(
@@ -48,8 +48,8 @@
         },
         # "ServiceReport": { # Пример для другого DocType
         #     "condition": "doc.docstatus == 1", # Отправлять при отправке (submit) ServiceReport
-        #     "send_to_roles": [ROLE_PROEKTNYJ_MENEDZHER],
+        #     "send_to_roles": [ROLE_PROEKTNYJ_MENЕДZHER],
         #     "subject": _("Отчет о выполненных работах {{ doc.name }} был отправлен"),
         #     "message": _("Отчет {{ doc.name }} для заявки {{ doc.service_request }} был отправлен.") # service_request - стандартное поле в ServiceReport
         # }
-    }
+    }
