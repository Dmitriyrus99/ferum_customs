--- a/ferum_customs/ferum_customs/doctype/payroll_entry_custom/payroll_entry_custom.json
+++ b/ferum_customs/ferum_customs/doctype/payroll_entry_custom/payroll_entry_custom.json
@@ -1,31 +1,13 @@
-{
-    "doctype": "DocType",
-    "name": "Payroll Entry Custom",
-    "module": "Ferum Customs",
-    "track_changes": 1,
-    "fields": [
-        {
-            "fieldname": "total_payable",
-            "label": "Total Payable",
-            "fieldtype": "Currency",
-            "read_only": 1,
-            "precision": 2,
-            "options": "RUB"
-        },
-        {
-            "fieldname": "total_deductions",
-            "label": "Total Deductions",
-            "fieldtype": "Currency",
-            "precision": 2,
-            "options": "RUB"
-        },
-        {
-            "fieldname": "net_payable",
-            "label": "Net Payable",
-            "fieldtype": "Currency",
-            "read_only": 1,
-            "precision": 2,
-            "options": "RUB"
-        }
-    ]
-}
+1. **Field Naming Convention**: The field names should follow a consistent naming convention. Consider using snake_case for all fieldnames (e.g., `total_payable`, `total_deductions`, `net_payable`).
+
+2. **Currency Field Options**: Ensure that the currency options are validated against a predefined list of acceptable currencies to prevent potential misuse.
+
+3. **Read-Only Fields**: If `total_payable` and `net_payable` are read-only, ensure that they are calculated and set correctly in the backend to avoid inconsistencies.
+
+4. **Precision Handling**: Ensure that the precision for currency fields is handled correctly in the application logic to avoid rounding errors.
+
+5. **Lack of Validation**: There are no validation rules defined for the fields. Consider adding validation to ensure that the values entered are within acceptable ranges.
+
+6. **Security Considerations**: Ensure that the data is sanitized and validated on the server side to prevent injection attacks or data corruption.
+
+7. **Documentation**: Consider adding comments or documentation within the JSON to explain the purpose of each field for future maintainability.