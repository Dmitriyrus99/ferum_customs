--- a/tests/unit/test_portal_menu_roles.py
+++ b/tests/unit/test_portal_menu_roles.py
@@ -5,18 +5,25 @@
 
 
 def load_fixture(name: str):
-    return json.loads((FIXTURE_PATH / name).read_text())
+    file_path = FIXTURE_PATH / name
+    if not file_path.exists():
+        raise FileNotFoundError(f"Fixture file {name} does not exist.")
+    content = file_path.read_text()
+    try:
+        return json.loads(content)
+    except json.JSONDecodeError:
+        raise ValueError(f"Fixture file {name} contains invalid JSON.")
 
 
 def test_portal_menu_item_role_customer():
     items = load_fixture("portal_menu_item.json")
     assert items, "portal_menu_item.json is empty"
     for item in items:
-        assert item["role"] == "Customer"
-        assert item["role"] != "Guest"
+        assert item.get("role") == "Customer", f"Item role is not 'Customer': {item}"
+        assert item.get("role") != "Guest", f"Item role should not be 'Guest': {item}"
 
 
 def test_no_guest_in_custom_docperm():
     docperms = load_fixture("custom_docperm.json")
-    roles = {perm["role"] for perm in docperms}
-    assert "Guest" not in roles
+    roles = {perm.get("role") for perm in docperms}
+    assert "Guest" not in roles, "'Guest' role found in custom_docperm.json"
