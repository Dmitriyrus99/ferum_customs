--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/android.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/android.py
@@ -6,7 +6,7 @@
 import re
 import sys
 from functools import lru_cache
-from typing import cast
+from typing import cast, Optional
 
 from .api import PlatformDirsABC
 
@@ -67,7 +67,7 @@
         """
         path = self.user_cache_dir
         if self.opinion:
-            path = os.path.join(path, "log")  # noqa: PTH118
+            path = os.path.join(path, "log")
         return path
 
     @property
@@ -103,35 +103,31 @@
         """
         path = self.user_cache_dir
         if self.opinion:
-            path = os.path.join(path, "tmp")  # noqa: PTH118
+            path = os.path.join(path, "tmp")
         return path
 
 
 @lru_cache(maxsize=1)
-def _android_folder() -> str | None:
+def _android_folder() -> Optional[str]:
     """:return: base folder for the Android OS or None if it cannot be found"""
     try:
-        # First try to get path to android app via pyjnius
-        from jnius import autoclass
-
-        context = autoclass("android.content.Context")
-        result: str | None = context.getFilesDir().getParentFile().getAbsolutePath()
-    except Exception:  # noqa: BLE001
-        # if fails find an android folder looking path on the sys.path
+        from jnius import autoclass
+
+        context = autoclass("android.content.Context")
+        result: Optional[str] = context.getFilesDir().getParentFile().getAbsolutePath()
+    except Exception:
         pattern = re.compile(r"/data/(data|user/\d+)/(.+)/files")
+        result = None
         for path in sys.path:
             if pattern.match(path):
                 result = path.split("/files")[0]
                 break
-        else:
-            result = None
     return result
 
 
 @lru_cache(maxsize=1)
 def _android_documents_folder() -> str:
     """:return: documents folder for the Android OS"""
-    # Get directories with pyjnius
     try:
         from jnius import autoclass
 
@@ -140,7 +136,7 @@
         documents_dir: str = context.getExternalFilesDir(
             environment.DIRECTORY_DOCUMENTS
         ).getAbsolutePath()
-    except Exception:  # noqa: BLE001
+    except Exception:
         documents_dir = "/storage/emulated/0/Documents"
 
     return documents_dir
@@ -149,7 +145,6 @@
 @lru_cache(maxsize=1)
 def _android_downloads_folder() -> str:
     """:return: downloads folder for the Android OS"""
-    # Get directories with pyjnius
     try:
         from jnius import autoclass
 
@@ -158,7 +153,7 @@
         downloads_dir: str = context.getExternalFilesDir(
             environment.DIRECTORY_DOWNLOADS
         ).getAbsolutePath()
-    except Exception:  # noqa: BLE001
+    except Exception:
         downloads_dir = "/storage/emulated/0/Downloads"
 
     return downloads_dir
@@ -167,7 +162,6 @@
 @lru_cache(maxsize=1)
 def _android_pictures_folder() -> str:
     """:return: pictures folder for the Android OS"""
-    # Get directories with pyjnius
     try:
         from jnius import autoclass
 
@@ -176,7 +170,7 @@
         pictures_dir: str = context.getExternalFilesDir(
             environment.DIRECTORY_PICTURES
         ).getAbsolutePath()
-    except Exception:  # noqa: BLE001
+    except Exception:
         pictures_dir = "/storage/emulated/0/Pictures"
 
     return pictures_dir
@@ -185,7 +179,6 @@
 @lru_cache(maxsize=1)
 def _android_videos_folder() -> str:
     """:return: videos folder for the Android OS"""
-    # Get directories with pyjnius
     try:
         from jnius import autoclass
 
@@ -194,7 +187,7 @@
         videos_dir: str = context.getExternalFilesDir(
             environment.DIRECTORY_DCIM
         ).getAbsolutePath()
-    except Exception:  # noqa: BLE001
+    except Exception:
         videos_dir = "/storage/emulated/0/DCIM/Camera"
 
     return videos_dir
@@ -203,7 +196,6 @@
 @lru_cache(maxsize=1)
 def _android_music_folder() -> str:
     """:return: music folder for the Android OS"""
-    # Get directories with pyjnius
     try:
         from jnius import autoclass
 
@@ -212,7 +204,7 @@
         music_dir: str = context.getExternalFilesDir(
             environment.DIRECTORY_MUSIC
         ).getAbsolutePath()
-    except Exception:  # noqa: BLE001
+    except Exception:
         music_dir = "/storage/emulated/0/Music"
 
     return music_dir
@@ -220,4 +212,4 @@
 
 __all__ = [
     "Android",
-]
+]
