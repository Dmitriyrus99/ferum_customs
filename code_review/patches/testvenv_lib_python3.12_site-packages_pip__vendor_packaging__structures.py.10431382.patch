--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/packaging/_structures.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/packaging/_structures.py
@@ -1,8 +1,3 @@
-# This file is dual licensed under the terms of the Apache License, Version
-# 2.0, and the BSD License. See the LICENSE file in the root of this repository
-# for complete details.
-
-
 class InfinityType:
     def __repr__(self) -> str:
         return "Infinity"
@@ -11,21 +6,21 @@
         return hash(repr(self))
 
     def __lt__(self, other: object) -> bool:
-        return False
+        return not isinstance(other, InfinityType)
 
     def __le__(self, other: object) -> bool:
-        return False
+        return not isinstance(other, InfinityType)
 
     def __eq__(self, other: object) -> bool:
         return isinstance(other, self.__class__)
 
     def __gt__(self, other: object) -> bool:
-        return True
+        return not isinstance(other, InfinityType)
 
     def __ge__(self, other: object) -> bool:
-        return True
+        return not isinstance(other, InfinityType)
 
-    def __neg__(self: object) -> "NegativeInfinityType":
+    def __neg__(self) -> "NegativeInfinityType":
         return NegativeInfinity
 
 
@@ -40,22 +35,22 @@
         return hash(repr(self))
 
     def __lt__(self, other: object) -> bool:
-        return True
+        return not isinstance(other, NegativeInfinityType)
 
     def __le__(self, other: object) -> bool:
-        return True
+        return not isinstance(other, NegativeInfinityType)
 
     def __eq__(self, other: object) -> bool:
         return isinstance(other, self.__class__)
 
     def __gt__(self, other: object) -> bool:
-        return False
+        return not isinstance(other, NegativeInfinityType)
 
     def __ge__(self, other: object) -> bool:
-        return False
+        return not isinstance(other, NegativeInfinityType)
 
-    def __neg__(self: object) -> InfinityType:
+    def __neg__(self) -> InfinityType:
         return Infinity
 
 
-NegativeInfinity = NegativeInfinityType()
+NegativeInfinity = NegativeInfinityType()
