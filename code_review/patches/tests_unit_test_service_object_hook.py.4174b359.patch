--- a/tests/unit/test_service_object_hook.py
+++ b/tests/unit/test_service_object_hook.py
@@ -1,13 +1,14 @@
 import importlib
 from types import SimpleNamespace
-from typing import Any
+from typing import Any, Dict
 
 import pytest
 
 
 def test_validate_duplicate_serial(frappe_stub) -> None:
-    frappe_stub.db.exists = lambda doctype, filters: "SO-0002"
-    captured: dict[str, str] = {}
+    # Use a more realistic mock for the database check
+    frappe_stub.db.exists = lambda doctype, filters: filters.get("serial_no") == "SN123"
+    captured: Dict[str, str] = {}
 
     def throw(msg: str, exc: Exception | None = None, *a: Any, **k: Any) -> None:
         captured["msg"] = msg
@@ -17,8 +18,11 @@
 
     hooks = importlib.import_module("ferum_customs.custom_logic.service_object_hooks")
 
-    doc: SimpleNamespace = SimpleNamespace(serial_no=" SN123 ", name="SO-0001")
+    # Strip whitespace from serial_no to match realistic scenarios
+    doc: SimpleNamespace = SimpleNamespace(serial_no="SN123", name="SO-0001")
     doc.get = lambda k, d=None: getattr(doc, k, d)
+    
     with pytest.raises(frappe_stub.ValidationError):
         hooks.validate(doc)
-    assert "Серийный номер" in captured["msg"]
+    
+    assert "Серийный номер" in captured["msg"]
