--- a/scripts/quick_setup.sh
+++ b/scripts/quick_setup.sh
@@ -2,6 +2,12 @@
 # Quick start helper for local development
 # Shell settings & verify Docker proxy settings
 set -euo pipefail
+
+# Function to print error messages
+function error_exit {
+    echo "$1" >&2
+    exit 1
+}
 
 # If Docker CLI is not available (e.g., in bare Python-only env), skip Docker setup
 if ! command -v docker >/dev/null 2>&1; then
@@ -11,17 +17,13 @@
 
 # Check for Docker systemd proxy settings
 if [ -d "/etc/systemd/system/docker.service.d" ] && ls /etc/systemd/system/docker.service.d/*proxy*.conf &>/dev/null; then
-    echo "Error: Proxy settings found in Docker systemd configuration (http-proxy.conf)."
-    echo "Please remove or rename this file and restart the Docker service:" \
-         "sudo systemctl daemon-reload && sudo systemctl restart docker"
-    exit 1
+    error_exit "Error: Proxy settings found in Docker systemd configuration (http-proxy.conf). Please remove or rename this file and restart the Docker service: sudo systemctl daemon-reload && sudo systemctl restart docker"
 fi
 
 DC="docker compose"
 
 if ! command -v docker >/dev/null; then
-    echo "Docker is required but not installed." >&2
-    exit 1
+    error_exit "Docker is required but not installed."
 fi
 
 if ! ${DC} version >/dev/null 2>&1; then
@@ -35,12 +37,11 @@
 if [ ! -f .env ]; then
     echo ".env not found, creating from .env.example"
     if [ -f .env.example ]; then
-        cp .env.example .env || { echo "Failed to copy .env.example to .env"; exit 1; }
+        cp .env.example .env || error_exit "Failed to copy .env.example to .env"
     else
-        echo ".env.example not found, please create it."
-        exit 1
+        error_exit ".env.example not found, please create it."
     fi
 fi
 
 echo "⚠️ Please ensure that the proxy is disabled in Docker Desktop settings (Settings → Resources → Proxies), otherwise there may be errors when pulling images."
-${DC} up -d --build
+${DC} up -d --build
