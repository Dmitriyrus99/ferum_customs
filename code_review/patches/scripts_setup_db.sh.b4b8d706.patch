--- a/scripts/setup_db.sh
+++ b/scripts/setup_db.sh
@@ -1,36 +1,42 @@
 #!/usr/bin/env bash
 set -euo pipefail
 
-# Скрипт для создания базы данных и пользователя в MariaDB/MySQL согласно site_config.json
+# Script to create a database and user in MariaDB/MySQL according to site_config.json
 
-# Ожидаемые переменные окружения:
-#   SITE_NAME         - имя Frappe-сайта (подпапка в sites/)
-#   DB_ROOT_PASSWORD  - пароль root для MySQL
+# Expected environment variables:
+#   SITE_NAME         - name of the Frappe site (subfolder in sites/)
+#   DB_ROOT_PASSWORD  - root password for MySQL
 
 if [[ -z "${SITE_NAME:-}" ]]; then
-  echo "Ошибка: переменная SITE_NAME не задана" >&2
+  echo "Error: SITE_NAME variable is not set" >&2
   exit 1
 fi
 if [[ -z "${DB_ROOT_PASSWORD:-}" ]]; then
-  echo "Ошибка: переменная DB_ROOT_PASSWORD не задана" >&2
+  echo "Error: DB_ROOT_PASSWORD variable is not set" >&2
   exit 1
 fi
 
 SITE_CONFIG="sites/${SITE_NAME}/site_config.json"
 if [[ ! -f "$SITE_CONFIG" ]]; then
-  echo "Ошибка: site_config.json не найден: $SITE_CONFIG" >&2
+  echo "Error: site_config.json not found: $SITE_CONFIG" >&2
   exit 1
 fi
 
 DB_NAME=$(jq -r '.db_name' "$SITE_CONFIG")
 DB_PASS=$(jq -r '.db_password' "$SITE_CONFIG")
 
-echo "Создаем базу данных и пользователя, если они отсутствуют..."
+# Validate that db_name and db_password are not empty
+if [[ -z "$DB_NAME" || -z "$DB_PASS" ]]; then
+  echo "Error: db_name or db_password is not set in site_config.json" >&2
+  exit 1
+fi
+
+echo "Creating database and user if they do not exist..."
 mysql -uroot -p"$DB_ROOT_PASSWORD" <<SQL
-CREATE DATABASE IF NOT EXISTS \`$DB_NAME\`;
-CREATE USER IF NOT EXISTS '$DB_NAME'@'%' IDENTIFIED BY '$DB_PASS';
-GRANT ALL PRIVILEGES ON \`$DB_NAME\`.* TO '$DB_NAME'@'%';
+CREATE DATABASE IF NOT EXISTS \`${DB_NAME//\'/\'\\\'\' }\`;
+CREATE USER IF NOT EXISTS '${DB_NAME//\'/\'\\\'\' }'@'%' IDENTIFIED BY '${DB_PASS//\'/\'\\\'\' }';
+GRANT SELECT, INSERT, UPDATE, DELETE ON \`${DB_NAME//\'/\'\\\'\' }\`.* TO '${DB_NAME//\'/\'\\\'\' }'@'%';
 FLUSH PRIVILEGES;
 SQL
 
-echo "✔ База данных и пользователь готовы: $DB_NAME"
+echo "✔ Database and user are ready: $DB_NAME"
