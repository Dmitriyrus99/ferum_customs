--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/unix.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/unix.py
@@ -40,7 +40,7 @@
         """
         path = os.environ.get("XDG_DATA_HOME", "")
         if not path.strip():
-            path = os.path.expanduser("~/.local/share")  # noqa: PTH111
+            path = os.path.expanduser("~/.local/share")
         return self._append_app_name_and_version(path)
 
     @property
@@ -62,7 +62,7 @@
             path_list = path_list[0:1]
         path_list = [
             self._append_app_name_and_version(os.path.expanduser(p)) for p in path_list
-        ]  # noqa: PTH111
+        ]
         return os.pathsep.join(path_list)
 
     @property
@@ -73,7 +73,7 @@
         """
         path = os.environ.get("XDG_CONFIG_HOME", "")
         if not path.strip():
-            path = os.path.expanduser("~/.config")  # noqa: PTH111
+            path = os.path.expanduser("~/.config")
         return self._append_app_name_and_version(path)
 
     @property
@@ -97,13 +97,13 @@
         """
         path = os.environ.get("XDG_CACHE_HOME", "")
         if not path.strip():
-            path = os.path.expanduser("~/.cache")  # noqa: PTH111
+            path = os.path.expanduser("~/.cache")
         return self._append_app_name_and_version(path)
 
     @property
     def site_cache_dir(self) -> str:
         """:return: cache directory shared by users, e.g. ``/var/tmp/$appname/$version``"""
-        return self._append_app_name_and_version("/var/tmp")  # noqa: S108
+        return self._append_app_name_and_version("/var/tmp")
 
     @property
     def user_state_dir(self) -> str:
@@ -113,7 +113,7 @@
         """
         path = os.environ.get("XDG_STATE_HOME", "")
         if not path.strip():
-            path = os.path.expanduser("~/.local/state")  # noqa: PTH111
+            path = os.path.expanduser("~/.local/state")
         return self._append_app_name_and_version(path)
 
     @property
@@ -121,7 +121,7 @@
         """:return: log directory tied to the user, same as `user_state_dir` if not opinionated else ``log`` in it"""
         path = self.user_state_dir
         if self.opinion:
-            path = os.path.join(path, "log")  # noqa: PTH118
+            path = os.path.join(path, "log")
         return path
 
     @property
@@ -164,7 +164,7 @@
             if sys.platform.startswith(("freebsd", "openbsd", "netbsd")):
                 path = f"/var/run/user/{getuid()}"
                 if not Path(path).exists():
-                    path = f"/tmp/runtime-{getuid()}"  # noqa: S108
+                    path = f"/tmp/runtime-{getuid()}"
             else:
                 path = f"/run/user/{getuid()}"
         return self._append_app_name_and_version(path)
@@ -196,7 +196,7 @@
     if media_dir is None:
         media_dir = os.environ.get(env_var, "").strip()
         if not media_dir:
-            media_dir = os.path.expanduser(fallback_tilde_path)  # noqa: PTH111
+            media_dir = os.path.expanduser(fallback_tilde_path)
 
     return media_dir
 
@@ -216,11 +216,11 @@
 
         path = parser["top"][key].strip('"')
         # Handle relative home paths
-        return path.replace("$HOME", os.path.expanduser("~"))  # noqa: PTH111
+        return path.replace("$HOME", os.path.expanduser("~"))
 
     return None
 
 
 __all__ = [
     "Unix",
-]
+]
