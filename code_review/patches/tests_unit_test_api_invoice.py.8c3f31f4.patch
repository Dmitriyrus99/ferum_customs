--- a/tests/unit/test_api_invoice.py
+++ b/tests/unit/test_api_invoice.py
@@ -2,6 +2,7 @@
 from types import SimpleNamespace
 import pytest
 
+@pytest.mark.unit
 def test_create_invoice_from_report(frappe_stub):
     api = importlib.reload(importlib.import_module("ferum_customs.api"))
 
@@ -15,11 +16,11 @@
         calculate_totals=lambda: None,
     )
 
-    items = []  # Changed from type hint to regular list initialization
+    items: list = []  # Added type hint for clarity
     invoice_doc = SimpleNamespace(
         name="INV001",
         append=lambda field, item: items.append(item),
-        insert=lambda ignore_permissions=True: None,
+        insert=lambda ignore_permissions: None,  # Removed default parameter
     )
 
     def get_doc(doctype, name=None):
@@ -31,14 +32,9 @@
         raise AssertionError("unexpected doctype")
 
     frappe_stub.get_doc = get_doc
-    frappe_stub.db.exists = lambda *a, **k: False  # Changed to return False for non-existent records
+    frappe_stub.db.exists = lambda *a, **k: False  # Ensure this is controlled
 
     result = api.create_invoice_from_report("SR1")
     assert result == "INV001"
     assert items and items[0]["description"] == "Work"
-
-# Added pytest marker to indicate this is a test function
-@pytest.mark.unit
-def test_create_invoice_from_report(frappe_stub):
-    # Test implementation
-    pass
+    # Additional assertions can be added here to verify the invoice details
