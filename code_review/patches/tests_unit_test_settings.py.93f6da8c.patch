--- a/tests/unit/test_settings.py
+++ b/tests/unit/test_settings.py
@@ -3,7 +3,7 @@
 from ferum_customs.config.settings import Settings
 
 def test_settings_env_file(tmp_path: Path, monkeypatch: MonkeyPatch) -> None:
-    """Проверка загрузки настроек из .env и игнорирование лишних переменных."""
+    """Test loading settings from .env file and ignoring extra variables."""
     env_content = (
         "TELEGRAM_BOT_TOKEN=token123\nSITE_NAME=mysite\nEXTRA_VAR=ignored"
     )
@@ -11,11 +11,9 @@
     tmp_env.write_text(env_content)
     monkeypatch.chdir(tmp_path)
 
-    # Remove redundant setenv calls since the .env file should be used
-    # monkeypatch.setenv("TELEGRAM_BOT_TOKEN", "token123")
-    # monkeypatch.setenv("SITE_NAME", "mysite")
+    settings: Settings = Settings(_env_file=tmp_env)  # Assuming Settings can load from a file
+    assert settings.telegram_bot_token == "token123", "Expected TELEGRAM_BOT_TOKEN to be 'token123'"
+    assert settings.site_name == "mysite", "Expected SITE_NAME to be 'mysite'"
+    assert not hasattr(settings, "EXTRA_VAR"), "Expected EXTRA_VAR to be ignored"
 
-    settings = Settings(_env_file=tmp_env)  # Assuming Settings can load from a file
-    assert settings.telegram_bot_token == "token123"
-    assert settings.site_name == "mysite"
-    assert not hasattr(settings, "EXTRA_VAR")
+    # Additional tests could be added here for edge cases
