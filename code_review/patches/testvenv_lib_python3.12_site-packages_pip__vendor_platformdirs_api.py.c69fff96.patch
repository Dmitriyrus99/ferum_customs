--- a/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/api.py
+++ b/testvenv/lib/python3.12/site-packages/pip/_vendor/platformdirs/api.py
@@ -5,7 +5,7 @@
 import os
 from abc import ABC, abstractmethod
 from pathlib import Path
-from typing import TYPE_CHECKING
+from typing import TYPE_CHECKING, Union
 
 if TYPE_CHECKING:
     import sys
@@ -19,15 +19,15 @@
 class PlatformDirsABC(ABC):
     """Abstract base class for platform directories."""
 
-    def __init__(  # noqa: PLR0913
+    def __init__(
         self,
-        appname: str | None = None,
-        appauthor: str | None | Literal[False] = None,
-        version: str | None = None,
-        roaming: bool = False,  # noqa: FBT001, FBT002
-        multipath: bool = False,  # noqa: FBT001, FBT002
-        opinion: bool = True,  # noqa: FBT001, FBT002
-        ensure_exists: bool = False,  # noqa: FBT001, FBT002
+        appname: Union[str, None] = None,
+        appauthor: Union[str, None, Literal[False]] = None,
+        version: Union[str, None] = None,
+        roaming: bool = False,
+        multipath: bool = False,
+        opinion: bool = True,
+        ensure_exists: bool = False,
     ) -> None:
         """
         Create a new platform directory.
@@ -75,7 +75,7 @@
             params.append(self.appname)
             if self.version:
                 params.append(self.version)
-        path = os.path.join(base[0], *params)  # noqa: PTH118
+        path = os.path.join(base[0], *params)
         self._optionally_create_directory(path)
         return path
 
@@ -221,4 +221,4 @@
     @property
     def user_runtime_path(self) -> Path:
         """:return: runtime path tied to the user"""
-        return Path(self.user_runtime_dir)
+        return Path(self.user_runtime_dir)
