name: CI Tests

on: [push, pull_request]

jobs:
  server-tests:
    runs-on: ubuntu-22.04
    name: Run Server-Side Tests

    env:
      SITE_NAME: test_site
      ADMIN_PASSWORD: admin
      ERPNEXT_TAG: v15.65.4
      DB_ROOT_PASSWORD: root

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install latest compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 \
            -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Generate .env file
        run: |
          {
            echo "SITE_NAME=${{ env.SITE_NAME }}"
            echo "ADMIN_PASSWORD=${{ env.ADMIN_PASSWORD }}"
            echo "ERPNEXT_TAG=${{ env.ERPNEXT_TAG }}"
            echo "DB_ROOT_PASSWORD=${{ env.DB_ROOT_PASSWORD }}"
          } > .env

      - name: Validate ERPNext Docker tag
        run: docker manifest inspect frappe/erpnext:${{ env.ERPNEXT_TAG }} >/dev/null

      - name: Pull Docker images
        run: docker compose -f docker-compose.test.yml pull || { echo "::error::Image pull failed"; exit 1; }

      - name: Start Docker stack
        run: docker compose -f docker-compose.test.yml up -d

      - name: Allow git access to workspace
        run: docker compose exec -T frappe bash -c 'if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then git config --global --add safe.directory /workspace; fi'

      - name: Install apps and dependencies
        run: |
          docker compose exec -T --user root frappe chown -R frappe:frappe /home/frappe/frappe-bench
          docker compose exec -T frappe bash -eo pipefail -c '
            set -e
            source /workspace/.env
            if [ ! -d apps/erpnext ]; then
                bench get-app --branch "${ERPNEXT_TAG}" --depth 1 erpnext https://github.com/frappe/erpnext
            else
                cd apps/erpnext && git fetch --depth=1 origin "${ERPNEXT_TAG}" && git checkout -q "${ERPNEXT_TAG}" && cd -
            fi
            bench setup requirements --node --python
            bench get-app ferum_customs /workspace
            bench new-site --db-root-password "$DB_ROOT_PASSWORD" --admin-password "$ADMIN_PASSWORD" "$SITE_NAME"
            bench --site "$SITE_NAME" install-app erpnext
            bench --site "$SITE_NAME" install-app ferum_customs
            bench pip install -q pytest pytest-cov
          '

      - name: Run tests
        run: |
          docker compose --env-file .env -f docker-compose.test.yml \
            up --abort-on-container-exit --exit-code-from frappe

      - name: Cleanup
        run: docker compose -f docker-compose.test.yml down -v

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

