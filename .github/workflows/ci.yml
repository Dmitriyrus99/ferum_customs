name: tests

on: [push, pull_request]

jobs:
  server:
    runs-on: ubuntu-22.04
    env:
      SITE_NAME: test_site
      ADMIN_PASSWORD: admin
      ERPNEXT_TAG: v15.37.0
    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('docker-compose.test.yml') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Validate tag
        run: docker manifest inspect frappe/erpnext-worker:${{ env.ERPNEXT_TAG }} >/dev/null

      - name: Pull images
        run: docker compose --env-file .env -f docker-compose.test.yml pull 
          || { echo "::error::Image pull failed"; exit 1; }

      - name: Start stack
        run: |
          docker compose --env-file .env -f docker-compose.test.yml up -d

      - name: Derive ERPNext branch from Docker tag
        id: erpnext_branch
        run: |
          echo "branch=${ERPNEXT_TAG}" >> "$GITHUB_OUTPUT"

      - name: Install app + ERPNext + deps
        run: |
          docker compose exec -T frappe bash -c "
            source /workspace/.env &&
            bench get-app --branch v15 erpnext https://github.com/frappe/erpnext &&
            bench get-app ferum_customs /workspace &&
            bench setup requirements --dev &&
            bench new-site --db-root-password root --admin-password $ADMIN_PASSWORD $SITE_NAME &&
            bench --site $SITE_NAME install-app erpnext &&
            bench --site $SITE_NAME install-app ferum_customs &&
            bench pip install pytest pytest-cov
          "

      - name: Run tests
        run: |
          docker compose --env-file .env -f docker-compose.test.yml run --exit-code-from frappe --rm frappe bash -c "
            bench --site $SITE_NAME set-config allow_tests true &&
            cd /workspace &&
            pytest -m 'not slow' --cov=ferum_customs --cov-report=xml
          "

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
