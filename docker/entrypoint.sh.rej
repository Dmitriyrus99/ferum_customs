--- docker/entrypoint.sh
+++ docker/entrypoint.sh
@@ -14,7 +14,7 @@
 INIT_LOCK_FILE="sites/${SITE_NAME}/.docker_site_initialized"
 
 echo "==> Waiting for MariaDB..."
-until mariadb -h "$DB_HOST" -P 3306 -uroot -p"${DB_ROOT_PASSWORD}" -e "SELECT 1" >/dev/null 2>&1; do
+until mariadb -h "$DB_HOST" -P 3306 -uroot -p"${DB_ROOT_PASSWORD:-}" -e "SELECT 1" >/dev/null 2>&1; do
   echo "   ... still waiting"
   sleep 2
 done
@@ -30,8 +30,8 @@
     if [[ ! -f "sites/${SITE_NAME}/site_config.json" ]]; then
       echo "==> Creating site $SITE_NAME"
       bench new-site --no-mariadb-socket \
-        --admin-password "${ADMIN_PASSWORD}" \
-        --mariadb-root-password "${DB_ROOT_PASSWORD}" \
+        --admin-password "${ADMIN_PASSWORD:-}" \
+        --mariadb-root-password "${DB_ROOT_PASSWORD:-}" \
         --db-host "${DB_HOST}" "${SITE_NAME}"
     else
       echo "==> site_config.json exists, skipping new-site"
@@ -60,28 +60,30 @@
 [ -f "$COMMON_CFG" ] || echo "{}" > "$COMMON_CFG"
 
 python3 - <<'PY'
-import json, os
-p="sites/common_site_config.json"
+import json
+import os
+
+p = "sites/common_site_config.json"
 with open(p) as f:
     try:
-        cfg=json.load(f)
+        cfg = json.load(f)
     except Exception:
-        cfg={}
-cfg["redis_cache"]=os.environ.get("REDIS_CACHE", cfg.get("redis_cache"))
-cfg["redis_queue"]=os.environ.get("REDIS_QUEUE", cfg.get("redis_queue"))
-cfg["redis_socketio"]=os.environ.get("REDIS_SOCKETIO", cfg.get("redis_socketio"))
+        cfg = {}
+cfg["redis_cache"] = os.environ.get("REDIS_CACHE", cfg.get("redis_cache"))
+cfg["redis_queue"] = os.environ.get("REDIS_QUEUE", cfg.get("redis_queue"))
+cfg["redis_socketio"] = os.environ.get("REDIS_SOCKETIO", cfg.get("redis_socketio"))
 if os.environ.get("SITE_NAME"):
-    cfg["default_site"]=os.environ["SITE_NAME"]
-with open(p,"w") as f:
-    json.dump(cfg,f,indent=2)
+    cfg["default_site"] = os.environ["SITE_NAME"]
+with open(p, "w") as f:
+    json.dump(cfg, f, indent=2)
 PY
 
 chown frappe:frappe "$COMMON_CFG"
 
 echo "==> bench set-config for redis"
-bench set-config -g redis_cache    "${REDIS_CACHE}" || true
-bench set-config -g redis_queue    "${REDIS_QUEUE}" || true
-bench set-config -g redis_socketio "${REDIS_SOCKETIO}" || true
+bench set-config -g redis_cache    "${REDIS_CACHE:-}" || true
+bench set-config -g redis_queue    "${REDIS_QUEUE:-}" || true
+bench set-config -g redis_socketio "${REDIS_SOCKETIO:-}" || true
 
 echo "==> Build assets (non-fatal)"
 bench build || true
@@ -90,4 +92,4 @@
 sed -i '/redis_cache/d;/redis_queue/d;/redis_socketio/d' Procfile || true
 
 echo "==> Starting CMD: $*"
-exec "$@"
+exec "$@"
